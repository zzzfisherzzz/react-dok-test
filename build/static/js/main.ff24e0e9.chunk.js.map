{"version":3,"sources":["components/ProductsList/ProductsList.module.css","img/favorite.svg","img/oil.jpg","components/Section/Section.js","components/ProductsList/SliderSettings.js","components/ProductsList/Card.js","components/ProductsList/ProductsList.js","components/ProductsList/TopProductsList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Section","title","children","className","sliderSettings","dots","infinite","speed","slidesToShow","slidesToScroll","arrow","centerPadding","responsive","breakpoint","settings","arrows","url","Card","product_id","brand_name","product_title","available","rating","url_direct","rating_count","price","product_image_alt","key","styles","productCard","productPhoto","href","src","productImg","alt","addToCard","favorite","brandName","productTitle","productRating","raiting","total","interactive","recomendation","productCardBottom","priceWrap","value","onOrder","buyBtn","ProductsList","cards","products","map","TopProductsList","filter","product","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ff24e0e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"products\":\"ProductsList_products__2Fr1E\",\"productCard\":\"ProductsList_productCard__3CMWs\",\"productPhoto\":\"ProductsList_productPhoto__12Tjx\",\"addToCard\":\"ProductsList_addToCard__3Yxph\",\"brandName\":\"ProductsList_brandName__1lNhG\",\"productTitle\":\"ProductsList_productTitle__3JqX2\",\"productRating\":\"ProductsList_productRating__3X1k0\",\"raiting\":\"ProductsList_raiting__1KaZS\",\"recomendation\":\"ProductsList_recomendation__1_ZEF\",\"productCardBottom\":\"ProductsList_productCardBottom__Bphci\",\"priceWrap\":\"ProductsList_priceWrap__2-fvH\",\"price\":\"ProductsList_price__395Fg\",\"value\":\"ProductsList_value__1pr7P\",\"available\":\"ProductsList_available__WpDX0\",\"onOrder\":\"ProductsList_onOrder__3Jc1M\",\"buyBtn\":\"ProductsList_buyBtn__1Wj0j\"};","module.exports = __webpack_public_path__ + \"static/media/favorite.4fc31a4b.svg\";","module.exports = __webpack_public_path__ + \"static/media/oil.721036e7.jpg\";","import React from 'react';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2 className=\"section-title\">{title}</h2>\n    {children}\n  </section>\n);\n\nexport default Section;\n","export const sliderSettings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 4,\n    slidesToScroll: 1,\n    arrow: true,\n    centerPadding: '43px',\n    responsive: [\n      {\n        breakpoint: 1200,\n        settings: {\n          slidesToShow: 3\n        }\n      },\n      {\n        breakpoint: 992,\n        settings: {\n          slidesToShow: 2\n        }\n      },\n      {\n        breakpoint: 480,\n        settings: {\n          slidesToShow: 1,\n          arrows: false\n        }\n      }\n    ]\n  };","import React from 'react';\nimport favorite from '../../img/favorite.svg'\nimport productImg from '../../img/oil.jpg'\nimport Rater from 'react-rater'\nimport 'react-rater/lib/react-rater.css'\nimport styles from \"../ProductsList/ProductsList.module.css\";\n\nconst url = 'https://dok.dbroker.com.ua/'\n\nconst Card = ({brand_name, product_title, available, rating, url_direct, rating_count,  price, product_image_alt}, product_id) => {\n    return (\n        <div key={product_id} className={styles.productCard}>\n                  <span className={styles.productPhoto}>\n                    <a href={`${url}${url_direct}`}>\n                      <img src={productImg} alt={product_image_alt} />\n                    </a>\n                      <button className={styles.addToCard}>\n                        <img src={favorite} />\n                      </button>\n                  </span>\n                  <a href={`${url}${url_direct}`}>\n                    <span className={styles.brandName}>{brand_name}</span>\n                  </a>\n                  <a href={`${url}${url_direct}`}>\n                    <span className={styles.productTitle}>{product_title}</span>\n                  </a>\n                  <span className={styles.productRating}>\n                      <span className={styles.raiting}>\n                        {rating > 0  ? <Rater rating={rating} total={5} interactive={false} />  : null }\n                      </span>\n                      <span className={styles.recomendation}>\n                        {rating_count > 0 ?  `(${rating_count} рекомендации)`  : null }\n                      </span>\n                  </span>                    \n                <a href={`${url}${url_direct}`} className={styles.productCardBottom}>\n                   <div className={styles.priceWrap}>\n                       <div className={styles.price}>{price}<span className={styles.value}>грн</span></div>  \n                       <span className={styles.available}>\n                          {available > 0 ? 'Есть в наличии' : <span className={styles.onOrder}>Под заказ, 13 дней</span>}\n                        </span>\n                    </div> \n                   <a href={`${url}${url_direct}`} className={styles.buyBtn}>Купить</a>\n                </a>\n          </div>\n    );\n};\n\nexport default Card;","import React from \"react\";\nimport Slider from \"react-slick\";\nimport { sliderSettings } from  './SliderSettings'\nimport styles from \"../ProductsList/ProductsList.module.css\";\nimport Card from './Card.js'\n\n\nconst ProductsList = ({cards}) => {\n  return (\n    <Slider {...sliderSettings} className={styles.products}>\n      {cards.map(({ brand_name, product_title, available, rating, url_direct, rating_count,  price, product_image_alt }, product_id) => (\n          <Card \n              product_id={product_id} \n              brand_name={brand_name} \n              product_title={product_title} \n              available={available} \n              rating={rating} \n              url_direct={url_direct} \n              rating_count={rating_count} \n              price={price} \n              product_image_alt={product_image_alt} \n          />\n        ))} \n  </Slider>\n  );\n};\n\nexport default ProductsList;\n\n\n\n\n\n","import React from \"react\";\nimport Slider from \"react-slick\";\nimport { sliderSettings } from  './SliderSettings'\nimport styles from \"../ProductsList/ProductsList.module.css\";\nimport Card from './Card.js'\n\n\nconst TopProductsList = ({cards}) => {\n  return (\n    <Slider {...sliderSettings} className={styles.products}>\n      {cards.filter(product => product.rating_count > 0).map(({ brand_name, product_title, available, rating, url_direct, rating_count,  price, product_image_alt }, product_id) => (\n            <Card \n                product_id={product_id} \n                brand_name={brand_name} \n                product_title={product_title} \n                available={available} \n                rating={rating} \n                url_direct={url_direct} \n                rating_count={rating_count} \n                price={price} \n                product_image_alt={product_image_alt} \n            />\n        ))} \n  </Slider>\n  );\n};\n\nexport default TopProductsList;\n\n\n\n\n\n","import React from 'react';\nimport './App.css'\nimport Section from './components/Section/Section'\nimport ProductsList from './components/ProductsList/ProductsList'\nimport TopProductsList from './components/ProductsList/TopProductsList'\nimport products from './services/products.json'\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <Section title=\"Бестселлеры в категории автотовары и автохимия\">\n        <TopProductsList cards={products} />\n      </Section>\n      <Section title=\"Что-то новенькое\">\n        <ProductsList cards={products} />\n      </Section>\n    </div>\n  );\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}